<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	                    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	                    
	                    http://www.springframework.org/schema/aop 
	                    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
	                    
	                    http://www.springframework.org/schema/tx 
	                    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	                    
	                    http://www.springframework.org/schema/context
	                    http://www.springframework.org/schema/context/spring-context-3.2.xsd
	                    "
	default-autowire="byName">
	<!-- 引入注解支持，烧苗业务包 -->
	<context:annotation-config></context:annotation-config>
	<context:component-scan base-package="com.action"></context:component-scan>
	<context:component-scan base-package="com.mapper"></context:component-scan>
	<context:component-scan base-package="com.biz"></context:component-scan>
	<!-- 配置Spring的数据来源 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"
			value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://127.0.0.1:3306/db?
                      useUnicode=true&amp;characterEncoding=utf-8" />
		<property name="username" value="root" />
		<property name="password" value="java" />
		 <!-- 连接池启动时的初始值 -->
		 <property name="initialSize" value="1"/>
		 <!-- 连接池的最大值 -->
		 <property name="maxActive" value="500"/>
		 <!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		 <property name="maxIdle" value="2"/>
		 <!--  最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
		 <property name="minIdle" value="1"/>
	</bean>
	<!-- 配置sqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 引入数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 引入mybatis配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 配置SQL（映射文件） -->
		<property name="mapperLocations">
			<list>
				<value>classpath:com/mapper/myMapper.xml</value>
			</list>
		</property>
	</bean>
	<!-- 配置SQLsessiontemplate -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	<!-- MapperScannerConfigurer批量注入的前提 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.mapper"></property>
	</bean>
	<bean id="usedBiz" class="com.biz.UsedBiz">
        <property name="iud" ref="IUsedDao"></property>
    </bean>
	<!-- 配置指定那些方法需要事务（事务通知） -->
        <!-- <tx:advice id="txavd" transaction-manager="txmange">
        <tx:attributes>
          <tx:method name="save.*" propagation="REQUIRED"/>
          <tx:method name="findUsers.*" propagation="REQUIRED"/>
          <tx:method name="findAllSpecies.*" propagation="REQUIRED"/>
          <tx:method name="saveGoods.*" propagation="REQUIRED"/>
          <tx:method name="findSpecieGoods.*" propagation="REQUIRED"/>
          <tx:method name="findMyGoods.*" propagation="REQUIRED"/>
          <tx:method name="findsome.*" propagation="REQUIRED"/>
          <tx:method name="findAllPage.*" propagation="REQUIRED"/>
        </tx:attributes>
        </tx:advice>
        配置事务增强器（切入点）指定那些包以及包中类需要使用事务
        <aop:config>
        <aop:pointcut expression="execution(* com.biz.*.* (..))" id="daopaint"/>
        <aop:advisor advice-ref="txavd" pointcut-ref="daopaint"/>
        </aop:config> -->
	<!-- 配置jdbc事务管理器 -->
	<bean id="txmange"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
     </bean>
       <!-- 加入注解事务配置 -->
        <tx:annotation-driven transaction-manager="txmange"/>
      
</beans>	                    